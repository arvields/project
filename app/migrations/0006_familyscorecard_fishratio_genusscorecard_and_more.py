# Generated by Django 5.0 on 2024-01-03 06:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0005_classificationresult'),
    ]

    operations = [
        migrations.CreateModel(
            name='FamilyScorecard',
            fields=[
                ('fscorecard_no', models.AutoField(primary_key=True, serialize=False)),
                ('ffamily_name', models.CharField(blank=True, max_length=45, null=True)),
                ('bd_score', models.SmallIntegerField(blank=True, null=True)),
                ('ed_score', models.SmallIntegerField(blank=True, null=True)),
                ('hl_score', models.SmallIntegerField(blank=True, null=True)),
                ('pdl_score', models.SmallIntegerField(blank=True, null=True)),
                ('snl_score', models.SmallIntegerField(blank=True, null=True)),
                ('pal_score', models.SmallIntegerField(blank=True, null=True)),
                ('vafl_score', models.SmallIntegerField(blank=True, null=True)),
                ('sample_remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('kbs_remarks', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'family_scorecard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishRatio',
            fields=[
                ('sample_no', models.OneToOneField(db_column='sample_no', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='app.samplemaster')),
                ('bd_bl_ratio', models.DecimalField(blank=True, db_column='BD/BL_ratio', decimal_places=2, max_digits=10, null=True)),
                ('pdl_bl_ratio', models.DecimalField(blank=True, db_column='PDL/BL_ratio', decimal_places=2, max_digits=10, null=True)),
                ('hl_bl_ratio', models.DecimalField(blank=True, db_column='HL/BL_ratio', decimal_places=2, max_digits=10, null=True)),
                ('snl_bl_ratio', models.DecimalField(blank=True, db_column='SnL/BL_ratio', decimal_places=2, max_digits=10, null=True)),
                ('ed_bl_ratio', models.DecimalField(blank=True, db_column='ED/BL_ratio', decimal_places=2, max_digits=10, null=True)),
                ('pal_bl_ratio', models.DecimalField(blank=True, db_column='PAL/BL_ratio', decimal_places=2, max_digits=10, null=True)),
                ('vafl_bl_ratio', models.DecimalField(blank=True, db_column='VAFL/BL_ratio', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'fish_ratio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenusScorecard',
            fields=[
                ('genus_scorecard_no', models.AutoField(primary_key=True, serialize=False)),
                ('ffamily_name', models.CharField(blank=True, max_length=45, null=True)),
                ('fgenus_name', models.CharField(blank=True, max_length=45, null=True)),
                ('dorsal_count_score', models.SmallIntegerField(blank=True, null=True)),
                ('anal_count_score', models.SmallIntegerField(blank=True, null=True)),
                ('pectoral_count_score', models.SmallIntegerField(blank=True, null=True)),
                ('caudal_count_score', models.SmallIntegerField(blank=True, null=True)),
                ('vertebrae_count_score', models.SmallIntegerField(blank=True, null=True)),
                ('pelvic_count_score', models.SmallIntegerField(blank=True, null=True)),
                ('sample_remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('kbs_remarks', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'genus_scorecard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SummaryRanking',
            fields=[
                ('summary_ranking_no', models.AutoField(primary_key=True, serialize=False)),
                ('ffamily_name', models.CharField(blank=True, max_length=45, null=True)),
                ('fgenus_name', models.CharField(blank=True, max_length=45, null=True)),
                ('meristic_sum', models.CharField(blank=True, max_length=10, null=True)),
                ('morphometric_sum', models.CharField(blank=True, max_length=10, null=True)),
                ('combined_scores', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('meristic_sample_remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('meristic_kbs_remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('morphometric_sample_remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('morphometric_kbs_remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('rank', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'summary_ranking',
                'managed': False,
            },
        ),
    ]
